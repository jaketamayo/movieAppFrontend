{"ast":null,"code":"import axios from 'axios';\n// Change the API_URL to the correct location of the backend API before deploying the app\nconst API_URL = 'http://127.0.0.1:8000'; /* 'http://localhost:8000' http://127.0.0.1:8000 or  'https://yourPythonAnywhereName.pythonanywhere.com'*/\n\nexport class APIService {\n  constructor() {}\n  getMovie(param_pk) {\n    const url = `${API_URL}/api/movies/${param_pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  getMovieList() {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  addNewMovie(movie) {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.post(url, movie, {\n      headers: headers\n    });\n  }\n  updateMovie(movie) {\n    const url = `${API_URL}/api/movies/${movie.pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.put(url, movie, {\n      headers: headers\n    });\n  }\n  deleteMovie(movie_Pk) {\n    const url = `${API_URL}/api/movies/${movie_Pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.delete(url, {\n      headers: headers\n    });\n  }\n  authenticateLogin(credentials) {\n    const url = `${API_URL}/api/`;\n    return axios.post(url, credentials);\n  }\n  registerUser(credentials) {\n    const url = `${API_URL}/register/`;\n    credentials.customusername = credentials.username;\n    return axios.post(url, credentials);\n  }\n}","map":{"version":3,"names":["axios","API_URL","APIService","constructor","getMovie","param_pk","url","jwtToken","localStorage","getItem","headers","Authorization","get","getMovieList","addNewMovie","movie","post","updateMovie","pk","put","deleteMovie","movie_Pk","delete","authenticateLogin","credentials","registerUser","customusername","username"],"sources":["/Users/tomatosauce/Documents/Movie_App/assign2-movies-part2-frontend-jaketamayo/movie-fe/src/http/APIService.js"],"sourcesContent":["import axios from 'axios';\n// Change the API_URL to the correct location of the backend API before deploying the app\nconst API_URL = 'http://127.0.0.1:8000';/* 'http://localhost:8000' http://127.0.0.1:8000 or  'https://yourPythonAnywhereName.pythonanywhere.com'*/\n\n\nexport class APIService {\n    constructor() {\n    }\n\n    getMovie(param_pk) {\n        const url = `${API_URL}/api/movies/${param_pk}`;\n        let jwtToken = localStorage.getItem('access');\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        return axios.get(url, { headers: headers });\n    }\n\n    getMovieList() {\n        const url = `${API_URL}/api/movies/`;\n        let jwtToken = localStorage.getItem('access');\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        return axios.get(url, { headers: headers });\n    }\n\n    addNewMovie(movie) {\n        const url = `${API_URL}/api/movies/`;\n        let jwtToken = localStorage.getItem('access');\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        return axios.post(url, movie, { headers: headers });\n    }\n\n    updateMovie(movie) {\n        const url = `${API_URL}/api/movies/${movie.pk}`;\n        let jwtToken = localStorage.getItem('access');\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        return axios.put(url, movie, { headers: headers });\n    }\n\n    deleteMovie(movie_Pk) {\n        const url = `${API_URL}/api/movies/${movie_Pk}`;\n        let jwtToken = localStorage.getItem('access');\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        return axios.delete(url, { headers: headers });\n    }\n    authenticateLogin(credentials) {\n        const url = `${API_URL}/api/`;\n        return axios.post(url, credentials);\n    }\n\n    registerUser(credentials) {\n        const url = `${API_URL}/register/`;\n        credentials.customusername = credentials.username\n        return axios.post(url, credentials);\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC;;AAGxC,OAAO,MAAMC,UAAU,CAAC;EACpBC,WAAWA,CAAA,EAAG,CACd;EAEAC,QAAQA,CAACC,QAAQ,EAAE;IACf,MAAMC,GAAG,GAAG,GAAGL,OAAO,eAAeI,QAAQ,EAAE;IAC/C,IAAIE,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAAEC,aAAa,EAAE,OAAOJ,QAAQ;IAAG,CAAC;IACpD,OAAOP,KAAK,CAACY,GAAG,CAACN,GAAG,EAAE;MAAEI,OAAO,EAAEA;IAAQ,CAAC,CAAC;EAC/C;EAEAG,YAAYA,CAAA,EAAG;IACX,MAAMP,GAAG,GAAG,GAAGL,OAAO,cAAc;IACpC,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAAEC,aAAa,EAAE,OAAOJ,QAAQ;IAAG,CAAC;IACpD,OAAOP,KAAK,CAACY,GAAG,CAACN,GAAG,EAAE;MAAEI,OAAO,EAAEA;IAAQ,CAAC,CAAC;EAC/C;EAEAI,WAAWA,CAACC,KAAK,EAAE;IACf,MAAMT,GAAG,GAAG,GAAGL,OAAO,cAAc;IACpC,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAAEC,aAAa,EAAE,OAAOJ,QAAQ;IAAG,CAAC;IACpD,OAAOP,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAES,KAAK,EAAE;MAAEL,OAAO,EAAEA;IAAQ,CAAC,CAAC;EACvD;EAEAO,WAAWA,CAACF,KAAK,EAAE;IACf,MAAMT,GAAG,GAAG,GAAGL,OAAO,eAAec,KAAK,CAACG,EAAE,EAAE;IAC/C,IAAIX,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAAEC,aAAa,EAAE,OAAOJ,QAAQ;IAAG,CAAC;IACpD,OAAOP,KAAK,CAACmB,GAAG,CAACb,GAAG,EAAES,KAAK,EAAE;MAAEL,OAAO,EAAEA;IAAQ,CAAC,CAAC;EACtD;EAEAU,WAAWA,CAACC,QAAQ,EAAE;IAClB,MAAMf,GAAG,GAAG,GAAGL,OAAO,eAAeoB,QAAQ,EAAE;IAC/C,IAAId,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAAEC,aAAa,EAAE,OAAOJ,QAAQ;IAAG,CAAC;IACpD,OAAOP,KAAK,CAACsB,MAAM,CAAChB,GAAG,EAAE;MAAEI,OAAO,EAAEA;IAAQ,CAAC,CAAC;EAClD;EACAa,iBAAiBA,CAACC,WAAW,EAAE;IAC3B,MAAMlB,GAAG,GAAG,GAAGL,OAAO,OAAO;IAC7B,OAAOD,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAEkB,WAAW,CAAC;EACvC;EAEAC,YAAYA,CAACD,WAAW,EAAE;IACtB,MAAMlB,GAAG,GAAG,GAAGL,OAAO,YAAY;IAClCuB,WAAW,CAACE,cAAc,GAAGF,WAAW,CAACG,QAAQ;IACjD,OAAO3B,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAEkB,WAAW,CAAC;EACvC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}