{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from \"../http/APIService\";\nconst apiService = new APIService();\nexport default {\n  name: \"Auth\",\n  data: () => ({\n    credentials: {},\n    valid: true,\n    showMsg: \"\",\n    loading: false,\n    rules: {\n      username: [v => !!v || \"Username is required\", v => v && v.length > 3 || \"A username must be more than 3 characters long\", v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"],\n      password: [v => !!v || \"Password is required\", v => v && v.length > 7 || \"The password must be longer than 7 characters\"]\n    },\n    showPassword: false\n  }),\n  methods: {\n    login() {\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      localStorage.removeItem(\"log_user\");\n      localStorage.removeItem(\"isAuthenticated\");\n      localStorage.setItem(\"isAuthenticated\", false);\n      apiService.authenticateLogin(this.credentials).then(response => {\n        const access = response.data.access;\n        const refresh = response.data.refresh;\n        localStorage.setItem(\"access\", access);\n        localStorage.setItem(\"refresh\", refresh);\n        localStorage.setItem(\"isAuthenticated\", true);\n        localStorage.setItem(\"log_user\", JSON.stringify(this.credentials.username));\n        window.location = \"/\";\n      }).catch(error => {\n        if (error.name === \"AxiosError\") {\n          // Verify CORS middleware installed in server settings\n          this.showMsg = \"axiosError\";\n        } else if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          //\"bad request\"\n          this.showMsg = \"requestError\";\n        } else {\n          this.showMsg = \"error\";\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","credentials","valid","showMsg","loading","rules","username","v","length","test","password","showPassword","methods","login","localStorage","removeItem","setItem","authenticateLogin","then","response","access","refresh","JSON","stringify","window","location","catch","error","status","push"],"sources":["/Users/tomatosauce/Documents/Movie_App/assign2-movies-part2-frontend-jaketamayo/movie-fe/src/components/Auth.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col-12 col-sm-6 col-md-4 col-lg-4\">\n                <div class=\"card mx-auto shadow\">\n                    <div class=\"card-body\">\n                        <div class=\"card-title\"><span>Login</span></div>\n                        <div v-if=\"showMsg === 'error'\" close-icon=\"mdi-close-circle\" :value=\"true\"\n                            class=\"alert alert-danger\" role=\"alert\" dense>\n                            Invalid username or password. Please Try again.\n                        </div>\n                        <div v-if=\"showMsg === 'axiosError'\" close-icon=\"mdi-close-circle\" :value=\"true\"\n                            class=\"alert alert-danger\" role=\"alert\" dense>\n                            Access blocked by server. Check server.\n                        </div>\n                        <div class=\"card-text pt-2\">\n                            <div class=\"col-md-10 mb-3\">\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\">@</span>\n                                    </div>\n                                    <input v-model=\"credentials.username\" :counter=\"70\" label=\"Username\"\n                                        :rules=\"rules.username\" maxlength=\"70\" required type=\"text\"\n                                        class=\"form-control mb-3\" placeholder=\"Username\"\n                                        aria-describedby=\"inputGroupPrepend2\" />\n                                    <div class=\"w-100\"></div>\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\">***</span>\n                                    </div>\n                                    <input :type=\"showPassword ? 'text' : 'Password'\" v-model=\"credentials.password\"\n                                        label=\"Password\" :rules=\"rules.password\" maxlength=\"20\" required\n                                        :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                                        @click:append=\"showPassword = !showPassword\" class=\"form-control\"\n                                        placeholder=\"Password\" aria-describedby=\"inputGroupPrepend2\" />\n                                </div>\n                            </div>\n                            <button ref=\"form\" @click.prevent=\"login\" class=\"btn btn-primary\">Login</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport router from '../router';\nimport { APIService } from \"../http/APIService\";\nconst apiService = new APIService();\n\nexport default {\n    name: \"Auth\",\n    data: () => ({\n        credentials: {},\n        valid: true,\n        showMsg: \"\",\n        loading: false,\n        rules: {\n            username: [\n                (v) => !!v || \"Username is required\",\n                (v) =>\n                    (v && v.length > 3) ||\n                    \"A username must be more than 3 characters long\",\n                (v) =>\n                    /^[a-z0-9_]+$/.test(v) ||\n                    \"A username can only contain letters and digits\",\n            ],\n            password: [\n                (v) => !!v || \"Password is required\",\n                (v) =>\n                    (v && v.length > 7) ||\n                    \"The password must be longer than 7 characters\",\n            ],\n        },\n        showPassword: false,\n    }),\n    methods: {\n        login() {\n            localStorage.removeItem(\"access\")\n            localStorage.removeItem(\"refresh\")\n            localStorage.removeItem(\"log_user\")\n            localStorage.removeItem(\"isAuthenticated\")\n            localStorage.setItem(\"isAuthenticated\", false)\n\n            apiService\n                .authenticateLogin(this.credentials)\n                .then((response) => {\n\n                    const access = response.data.access\n                    const refresh = response.data.refresh\n\n                    localStorage.setItem(\"access\", access)\n                    localStorage.setItem(\"refresh\", refresh)\n                    localStorage.setItem(\"isAuthenticated\", true)\n                    localStorage.setItem(\"log_user\", JSON.stringify(this.credentials.username))\n\n                    window.location = \"/\";\n                }).catch(error => {\n                    if (error.name === \"AxiosError\") { // Verify CORS middleware installed in server settings\n                        this.showMsg = \"axiosError\"\n                    } else if (error.response.status === 401) { // \"not authorized\"\n                        router.push(\"/auth\");\n                    } else if (error.response.status === 400) { //\"bad request\"\n                        this.showMsg = \"requestError\";\n                    } else {\n                        this.showMsg = \"error\";\n                        router.push(\"/auth\");\n                    }\n                });\n        }\n    }\n}\n</script>\n"],"mappings":";AA8CA,OAAOA,MAAK,MAAO,WAAW;AAC9B,SAASC,UAAS,QAAS,oBAAoB;AAC/C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AAEnC,eAAe;EACXE,IAAI,EAAE,MAAM;EACZC,IAAI,EAAEA,CAAA,MAAO;IACTC,WAAW,EAAE,CAAC,CAAC;IACfC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;MACHC,QAAQ,EAAE,CACLC,CAAC,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB,EACnCA,CAAC,IACGA,CAAA,IAAKA,CAAC,CAACC,MAAK,GAAI,CAAC,IAClB,gDAAgD,EACnDD,CAAC,IACE,cAAc,CAACE,IAAI,CAACF,CAAC,KACrB,gDAAgD,CACvD;MACDG,QAAQ,EAAE,CACLH,CAAC,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB,EACnCA,CAAC,IACGA,CAAA,IAAKA,CAAC,CAACC,MAAK,GAAI,CAAC,IAClB,+CAA+C;IAE3D,CAAC;IACDG,YAAY,EAAE;EAClB,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,KAAKA,CAAA,EAAG;MACJC,YAAY,CAACC,UAAU,CAAC,QAAQ;MAChCD,YAAY,CAACC,UAAU,CAAC,SAAS;MACjCD,YAAY,CAACC,UAAU,CAAC,UAAU;MAClCD,YAAY,CAACC,UAAU,CAAC,iBAAiB;MACzCD,YAAY,CAACE,OAAO,CAAC,iBAAiB,EAAE,KAAK;MAE7ClB,UAAS,CACJmB,iBAAiB,CAAC,IAAI,CAAChB,WAAW,EAClCiB,IAAI,CAAEC,QAAQ,IAAK;QAEhB,MAAMC,MAAK,GAAID,QAAQ,CAACnB,IAAI,CAACoB,MAAK;QAClC,MAAMC,OAAM,GAAIF,QAAQ,CAACnB,IAAI,CAACqB,OAAM;QAEpCP,YAAY,CAACE,OAAO,CAAC,QAAQ,EAAEI,MAAM;QACrCN,YAAY,CAACE,OAAO,CAAC,SAAS,EAAEK,OAAO;QACvCP,YAAY,CAACE,OAAO,CAAC,iBAAiB,EAAE,IAAI;QAC5CF,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEM,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,WAAW,CAACK,QAAQ,CAAC;QAE1EkB,MAAM,CAACC,QAAO,GAAI,GAAG;MACzB,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAAC5B,IAAG,KAAM,YAAY,EAAE;UAAE;UAC/B,IAAI,CAACI,OAAM,GAAI,YAAW;QAC9B,OAAO,IAAIwB,KAAK,CAACR,QAAQ,CAACS,MAAK,KAAM,GAAG,EAAE;UAAE;UACxChC,MAAM,CAACiC,IAAI,CAAC,OAAO,CAAC;QACxB,OAAO,IAAIF,KAAK,CAACR,QAAQ,CAACS,MAAK,KAAM,GAAG,EAAE;UAAE;UACxC,IAAI,CAACzB,OAAM,GAAI,cAAc;QACjC,OAAO;UACH,IAAI,CAACA,OAAM,GAAI,OAAO;UACtBP,MAAM,CAACiC,IAAI,CAAC,OAAO,CAAC;QACxB;MACJ,CAAC,CAAC;IACV;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}